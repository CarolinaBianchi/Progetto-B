package gui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import gui.LabelMapListener;
import risiko.Phase;
import risiko.Phase;
import risiko.*;

/**
 * @author andrea
 */
public class GUI extends javax.swing.JFrame {
    private Game    game;
    private final Map<Color, String>  colorCountryNameMap;

    public GUI() throws Exception {
        initComponents();
        game = new Game(2);
        colorCountryNameMap=readColorTextMap("src/risiko/color.txt");
        LabelMapListener labelMapListener = new LabelMapListener(convertToBufferedImage(labelMap), colorCountryNameMap, game);
        labelMap.addMouseListener(labelMapListener);
        labelMap.addMouseMotionListener(labelMapListener);
        
    }
    
    private void update() {
        this.playerPhaseLabel.setText(game.getInfo());
        if (game.getPhase().equals(Phase.REINFORCE)){           
        }
        if (game.getAttackResult() != null) 
            this.infoTextArea.setText(game.getAttackResult().toString());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelMap = new javax.swing.JLabel();
        playerPhaseLabel = new javax.swing.JLabel();
        nextPhaseButton = new javax.swing.JButton();
        attackButton = new javax.swing.JButton();
        moreInfoButton = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelMap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/risiko/cartina_italia.png"))); // NOI18N

        nextPhaseButton.setText("nextPhase");
        nextPhaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPhaseButtonActionPerformed(evt);
            }
        });

        attackButton.setText("attack");
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });

        moreInfoButton.setText("more Info");
        moreInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nextPhaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(attackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(moreInfoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(playerPhaseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerPhaseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(290, 290, 290)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelMap)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(moreInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(attackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextPhaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moreInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreInfoButtonActionPerformed
    }//GEN-LAST:event_moreInfoButtonActionPerformed

    private void nextPhaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPhaseButtonActionPerformed
        game.nextPhase();
        update();
    }//GEN-LAST:event_nextPhaseButtonActionPerformed

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attackButtonActionPerformed

        
    /**
     * Procedurone per la creazione di una map<Color,String> a partire da un file di testo 
     * contenente un numero a piacere di linee, dove ogni linea contiene un [token] avente la forma:
     * [token]   -> [Country] = [RGB]
     * [Country] -> qualsiasi sequenza di caratteri ASCII diversi dal carattere = e interruzioni di linea 
     * [RGB]     -> [R],[G],[B]
     * [R]       -> un numerCountryo intero da 0 a 255
     * [G]       -> un numero intero da 0 a 255
     * [B]       -> un numero intero da 0 a 255.
     */
    private static Map<Color,String> readColorTextMap(String relativeURL) throws FileNotFoundException{
        Map<Color, String> map = new HashMap<>();
        try (Scanner scanner   = new Scanner(new FileReader(relativeURL))) {
            while(scanner.hasNextLine()) {
                String[] tokens  = scanner.nextLine().split("=");
                String[] RGB     = tokens[1].split(",");
                String   country = tokens[0].trim();
                int      R       = Integer.parseInt(RGB[0].trim());
                int      G       = Integer.parseInt(RGB[1].trim());
                int      B       = Integer.parseInt(RGB[2].trim());             
                Color    color   = new Color( R,G,B);
                map.put( color, country);
            }
        }
        return map;
    }
    
    /**
     * Metodo necessario per convertire la labelMap in una bufferedMap a causa della GUI che Ã¨ stata creata con DESIGN
     * @param labelMap
     * @return 
     */
    private static BufferedImage convertToBufferedImage(JLabel labelMap){
        ImageIcon imgIcon = ((ImageIcon) labelMap.getIcon());
        Image     image   = imgIcon.getImage();
        BufferedImage  newImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = newImage.createGraphics();
        g.drawImage(image, 0, 0, null);
        g.dispose();
        return newImage;
    }   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelMap;
    private javax.swing.JButton moreInfoButton;
    private javax.swing.JButton nextPhaseButton;
    private javax.swing.JLabel playerPhaseLabel;
    // End of variables declaration//GEN-END:variables
}
